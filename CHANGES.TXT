0.1
- Initial release

0.2
- Fixed uncommenting of non-aligned comments
- improved support for block comments (with middle lines and indentation)
- using TCommentBlock for file types that don't have block comments creates
single line comments
- removed the TCommentAsBlock command (TCommentAs provides its functionality)
- removed g:tcommentSetCMS
- the default key bindings have slightly changed

1.3
- slightly improved recognition of embedded syntax
- if no commentstring is defined in whatever way, reconstruct one from
&comments
- The TComment... commands now have bang variants that don't act as toggles
but always comment out the selected text
- fixed problem with commentstrings containing backslashes
- comment as visual block (allows commenting text to the right of the main
text, i.e., this command doesn't work on whole lines but on the text to the
right of the cursor)
- enable multimode for dsl, vim filetypes
- added explicit support for some other file types I ran into

1.4
- Fixed problem when &commentstring was invalid (e.g. lua)
- perl_block by Kyosuke Takayama.
- <c-_>s mapped to :TCommentAs <c-r>=&ft<cr>

1.5
- "Inline" visual comments (uses the &filetype_inline style if
available; doesn't check if the filetype actually supports this kind of
comments); tComment can't currently deduce inline comment styles from
&comments or &commentstring (I personally hardly ever use them); default
map: <c-_>i or <c-_>I
- In visual mode: if the selection spans several lines, normal mode is
selected; if the selection covers only a part of one line, inline mode
is selected
- Fixed problem with lines containing ^M or ^@ characters.
- It's no longer necessary to call TCommentCollectFileTypes() after
defining a new filetype via TCommentDefineType()
- Disabled single <c-_> mappings
- Renamed TCommentVisualBlock to TCommentRight
- FIX: Forgot 'x' in ExtractCommentsPart() (thanks to Fredrik Acosta)

1.6
- Ignore sql when guessing the comment string in php files; tComment
sometimes chooses the wrong comment string because the use of sql syntax
is used too loosely in php files; if you want to comment embedded sql
code you have to use TCommentAs
- Use keepjumps in commands.
- Map <c-_>p & <L>_p to vip:TComment<cr>
- Made key maps configurable via g:tcommentMapLeader1 and
g:tcommentMapLeader2

1.7
- gc{motion} (see g:tcommentMapLeaderOp1) functions as a comment toggle
operator (i.e., something like gcl... works, mostly); gC{motion} (see
g:tcommentMapLeaderOp2) will unconditionally comment the text.
- TCommentAs takes an optional second argument (the comment level)
- New "n" map: TCommentAs &filetype [COUNT]
- Defined mail comments/citations
- g:tcommentSyntaxMap: Map syntax names to filetypes for buffers with
mixed syntax groups that don't match the filetypeEmbeddedsyntax scheme (e.g.
'vimRubyRegion', which should be commented as ruby syntax, not as vim
syntax)
- FIX: Comments in vim*Region
- TComment: The use of the type argument has slightly changed (IG -> i,
new: >)

1.8
- Definitly require vim7
- Split the plugin into autoload & plugin.
- g:TCommentFileTypes is a list
- Fixed some block comment strings
- Removed extraneous newline in some block comments.
- Maps for visal mode (thanks Krzysztof Goj)

1.9
- Fix left offset for inline comments (via operator binding)

1.10
- tcomment#Operator defines w:tcommentPos if invoked repeatedly
- s:GuessFileType: use len(getline()) instead of col()

1.11
- Support for erlang (thanks to Zhang Jinzhu)

1.12
- Moved the definition of some variables from plugin/tComment.vim to
autoload/tcomment.vim
- Changed comment string for eruby (proposed by Vinicius Baggio)
- Support for x86conf

2.0
- Enabled key=value pairs to configure commenting
- Renamed the file plugin/tComment.vim to plugin/tcomment.vim
- Renamed certain global functions to tcomment#...

2.1
- FIX

version: "2.02"
  - Support for matlab (contributed by D Fong)
  MD5 checksum: 29a2742dfae32b52a7abcdfb4de553ad

version: "2.03"
  - s:PrintF(): Silently ignore malformed format strings
  - Deal with major.minor pseudo-filetypes
  - go-lang
  - Remove s:SPrintF() since vim now has printf()
  MD5 checksum: 4a13ffb1b1d46bbd2dc8dcee77507983

version: "2.04"
  - Support for fstab
  - g:tcommentOptions: Other key-value options used by |tcomment#Comment()|.
  - Support for django (thanks to Jim Tinsky)
  - g:tcomment#syntax_substitute: Rewrite syntax names
  - django support: minor correction
  MD5 checksum: 994e5886d185857848b5472d5457b232

version: "2.05"
  - Explicit support for python (thanks to brendanarnold)
  - Support for samba (thanks Dominic)
  - .gitignore
  - Define new types: debsources and debcontrol
  - Removed some whitespace as proposed by blueyed
  - Add config for typoscript filetype.
  - EXPERIMENTAL commentstring_rx: Support for using regexps to uncomment code
  - s:ProcessedLine: Don't substitute(rv, '\n', '\\\n', 'g')
  - Try to handle char-type text objects (disabled by default)
  - scss (SASS) filetype
  - Add config for 'nginx' filetype.
  MD5 checksum: 0e23f194638256fb4fa4a729df645966

